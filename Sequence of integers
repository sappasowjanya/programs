/*Let's consider the following algorithm of generating a sequence of integers. Initially we have a sequence consisting of a single element equal to 1. Then we perform (n - 1) steps. On each step we take the sequence we've got on the previous step, append it to the end of itself and insert in the middle the minimum positive integer we haven't used before. For example, we get the sequence [1, 2, 1] after the first step, the sequence [1, 2, 1, 3, 1, 2, 1] after the second step.
The task is to find the value of the element with index k (the elements are numbered from 1) in the obtained sequence, i. e. after (n - 1)steps.


Input Format
You will be given a function with two integers n and k as arguments.

Constraints
1 <= n <= 50
1 <= k <= 2n - 1

Output Format
Return single integer the integer at the k-th position in the obtained sequence 

Sample TestCase 1
Input
3 2
Output
2
Explanation
The obtained sequence is [1,2,1,3,1,2,1]. The number on the second position is 2. */


//complete the function


 int sequenceOfIntegers(int input1,int input2)
    {
        //Write code here
        int c=0;
        while(input2%2==0)
        {
            input2=input2/2;
            c++;
        }
        return c+1;
    }
